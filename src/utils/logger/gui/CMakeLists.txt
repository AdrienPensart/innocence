set(LOGGER_GUI_TARGET "logger_gui")
set(CMAKE_PREFIX_PATH ${QT_INSTALL_DIR})
find_package(Qt5Widgets REQUIRED)
set(CMAKE_AUTOMOC OFF)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
include_directories(${Qt5Widgets_INCLUDES})
add_definitions(${Qt5Widgets_DEFINITIONS})

include_directories(${CMAKE_CURRENT_BINARY_DIR})

file(GLOB LOGGER_GUI_SRC_FILES src/*)
file(GLOB LOGGER_GUI_MOC_FILES src/*.hpp)
file(GLOB LOGGER_GUI_UI_FILES ui/*.ui)
file(GLOB LOGGER_GUI_RSC_FILES *.qrc)

QT5_ADD_RESOURCES(LOGGER_GUI_SRC_FILES ${LOGGER_GUI_RSC_FILES})
QT5_WRAP_CPP(LOGGER_GUI_MOC_SRC_FILES ${LOGGER_GUI_MOC_FILES})
QT5_WRAP_UI(LOGGER_GUI_UI_HEADER_FILES ${LOGGER_GUI_UI_FILES})

if(WIN32)
	if(CMAKE_BUILD_TYPE MATCHES Release)
		set(LOGGER_GUI_TYPE WIN32)
	endif()
endif(WIN32)

add_executable(
    ${LOGGER_GUI_TARGET}
    ${LOGGER_GUI_TYPE}
	${LOGGER_GUI_MOC_SRC_FILES}
	${LOGGER_GUI_SRC_FILES}
	${LOGGER_GUI_UI_HEADER_FILES}
	${LOGGER_GUI_MOC_FILES}
)

QT5_USE_MODULES(${LOGGER_GUI_TARGET} Widgets)
target_link_libraries(${LOGGER_GUI_TARGET} log_md system_md network_md ${QT_LIBRARIES})
set_target_properties(${LOGGER_GUI_TARGET} PROPERTIES COMPILE_FLAGS ${BUILD_FLAGS_MD} COMPILE_DEFINITIONS PROJECT_MODULE="${LOGGER_GUI_TARGET}")
#install(TARGETS ${LOGGER_GUI_TARGET} DESTINATION innocence)
